#version 450

layout( local_size_x = 32, local_size_y = 32 ) in;

layout( set = 0, binding = 0, rgba32f ) uniform imageBuffer StorageTexelBuffer;

layout( push_constant ) uniform TimeState {
  float DeltaTime;
  float TotalTime;
} PushConstant;

const uint PARTICLES_COUNT = 1000;
float explosionLength = 4;
void main() {
  if( gl_GlobalInvocationID.x < PARTICLES_COUNT ) {
    vec4 position = imageLoad( StorageTexelBuffer, int(gl_GlobalInvocationID.x * 2) );
    vec4 color = imageLoad( StorageTexelBuffer, int(gl_GlobalInvocationID.x * 2 + 1) );

    vec3 speed = normalize( position.xyz  )*color.w + vec3(0,0.1,0);

    float speedfactor = PushConstant.DeltaTime * 0.5 * (1-(color.w*PushConstant.TotalTime)/ (1.5*explosionLength));
    position.xyz += speed * speedfactor;
    imageStore( StorageTexelBuffer, int(gl_GlobalInvocationID.x * 2), position );
  }
}
